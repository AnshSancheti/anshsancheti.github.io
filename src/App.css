:root {
  --bg-0: #0b1020;
  --bg-1: #0f1730;
  --text: #e6e9ef;
  --muted: #a8b0c2;
  --brand: #7aa2ff;
  --ring: rgba(122, 162, 255, 0.4);
  --border: rgba(255, 255, 255, 0.08);
}

/* Headings used in hero overlay */
.hero-title {
  font-size: clamp(32px, 5vw, 56px);
  line-height: 1.05;
  letter-spacing: -0.02em;
  margin: 0;
}
.hero-subtitle { color: var(--muted); max-width: 56ch; margin: 0; }

.cta { display: flex; gap: 12px; }
.btn {
  appearance: none;
  border: 1px solid var(--border);
  background: rgba(255, 255, 255, 0.04);
  color: var(--text);
  padding: 10px 14px;
  border-radius: 12px;
  font-size: 14px;
  cursor: pointer;
  transition: transform 120ms ease, background 120ms ease, border-color 120ms ease, box-shadow 120ms ease;
}
.btn:hover { background: rgba(255, 255, 255, 0.08); border-color: var(--ring); }
.btn:active { transform: translateY(1px); }
.btn-primary { background: var(--brand); color: #0b1020; border-color: transparent; box-shadow: 0 0 0 6px rgba(122,162,255,0.15); }
.btn-primary:hover { filter: brightness(1.05); box-shadow: 0 0 0 8px rgba(122,162,255,0.18); }
.btn-ghost { background: transparent; }

/* Visual circle is drawn on canvas */

/* Full-screen component container */
.rtg-container {
  position: relative;
  width: 100vw;
  /* Use dynamic viewport units on mobile to avoid white bars */
  height: 100vh;   /* fallback */
  height: 100svh;  /* small viewport */
  height: 100dvh;  /* dynamic viewport */
  color: var(--text);
  background: radial-gradient(1200px 800px at 20% -10%, #1a2455 0%, transparent 50%),
    radial-gradient(900px 600px at 100% 0%, #0f2762 0%, transparent 55%),
    linear-gradient(180deg, var(--bg-0), var(--bg-1));
  overflow: hidden;
  /* Fill iOS safe area bottom when viewport-fit=cover */
  padding-bottom: env(safe-area-inset-bottom);
  padding-bottom: constant(safe-area-inset-bottom);
}
.rtg-container canvas { display: block; touch-action: none; cursor: grab; }
.rtg-container canvas:active { cursor: grabbing; }
.rtg-social {
  position: absolute;
  top: 14px;
  right: 14px;
  display: flex;
  gap: 10px;
  z-index: 10;
}
.icon-link {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 38px;
  height: 38px;
  border-radius: 10px;
  color: var(--text);
  background: rgba(255, 255, 255, 0.06);
  border: 1px solid var(--border);
  text-decoration: none;
  transition: background 120ms ease, border-color 120ms ease, transform 120ms ease, box-shadow 120ms ease;
}
.icon-link:hover { background: rgba(255, 255, 255, 0.12); border-color: var(--ring); }
.icon-link:active { transform: translateY(1px); }
.icon-link:focus-visible { outline: none; box-shadow: 0 0 0 3px rgba(122,162,255,0.35); }
.icon-link svg { width: 18px; height: 18px; fill: currentColor; display: block; }
.rtg-overlay {
  position: absolute;
  left: min(7vw, 80px);
  top: 50%;
  transform: translateY(-50%);
  max-width: 560px;
  display: flex;
  flex-direction: column;
  gap: 16px;
  /* Glassmorphism card */
  padding: 20px;
  border-radius: 16px;
  background: rgba(255, 255, 255, 0.04);
  border: 1px solid rgba(255, 255, 255, 0.12);
  box-shadow:
    0 8px 30px rgba(0, 0, 0, 0.25),
    inset 0 1px 0 rgba(255, 255, 255, 0.08);
  backdrop-filter: saturate(1.1) blur(14px);
  -webkit-backdrop-filter: saturate(1.1) blur(14px);
}

/* Mobile layout: place circle above, text below */
@media (max-width: 768px) {
  .rtg-overlay {
    left: 50%;
    top: auto;
    bottom: 8%;
    transform: translateX(-50%);
    text-align: center;
    /* Shrink-wrap to content with reasonable cap */
    display: inline-flex;
    width: auto;
    max-width: calc(100vw - 32px);
    padding: 16px 20px;
    align-items: center;
  }
  .hero-title {
    white-space: nowrap;
    font-size: clamp(26px, 7.5vw, 32px);
  }
}
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');

html, body, #root {
  height: 100%;
}
body {
  font-family: 'Inter', ui-sans-serif, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif;
  margin: 0;
  /* Match background to container to hide any transient gaps */
  background: linear-gradient(180deg, var(--bg-0), var(--bg-1));
}
html { background: linear-gradient(180deg, var(--bg-0), var(--bg-1)); }
